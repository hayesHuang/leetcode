package leetcode;

public class WordSearch {
	private boolean exist=false;
	private void exist(int i,int j,char[][] board, boolean[][] used, int index, String word){
		if(board[i][j]==word.charAt(index)) {
			if(index==word.length()-1){
				exist = true;
				return;
			}
			used[i][j]=true;
			int m=board.length;
			int n=board[0].length;
			if(i-1>=0&&!used[i-1][j]){
				exist(i-1,j,board,used,index+1,word);
			}
			if(j-1>=0&&!used[i][j-1]){
				exist(i,j-1,board,used,index+1,word);
			}
			if(i+1<m&&!used[i+1][j]){
				exist(i+1,j,board,used,index+1,word);
			}
			if(j+1<n&&!used[i][j+1]){
				exist(i,j+1,board,used,index+1,word);
			}
			used[i][j]=false;
		}
		
	}
    public boolean exist(char[][] board, String word) {
    	if(word==null||word.length()==0) return true;
    	if(board==null||board.length<=0||board[0].length<=0) return false;
    	int m=board.length;
    	int n=board[0].length;
    	boolean[][] used = new boolean[m][n];
    	for(int i=0;i<m;i++){
    		for(int j=0;j<n;j++){
    			if(exist) return true;
    	    	exist(i,j,board,used,0,word);
    		}
    	}
    	return exist;
    }
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		char[][] board = new char[][]{{'a','a'},{'a','b'}};
//		char[][] board= new char[30][];
//		for(int i=0;i<30;i++){
//			board[i]="aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa".toCharArray();
//		}
		String word = "baaa";
		WordSearch test = new WordSearch();
		boolean res = test.exist(board,word);
		System.out.println(res);

	}

}
